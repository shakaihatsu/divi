{"name":"Divi","tagline":"Dependency Injection Viewer plugin for Eclipse","body":"DIVi: Dependency Injection Viewer plugin for Eclipse\r\n\r\nOverview\r\n--------\r\n\r\nDIVi is a dependency injection analyzing tool. It can show in a tree view what classes have injected dependencies,\r\nand what are the types of those dependencies. It also indicates implementations, in case of interfaces.\r\n\r\nHow to install\r\n--------------\r\n\r\nDIVi is a regular Eclipse plugin project. Once it has been imported, it can be exported as a Deployable plugin and added\r\nto Eclipse.\r\n\r\nTo do this, you can:\r\n\r\n1. Left-click on [divi] -> Export... -> Plug-in Development / Deployable plug-ins and fragments -> Next >\r\n  Select Directory, enter the {path} where you want to export [divi] as a jar\r\n2. Copy {path}/plugins/divi_{version}.jar to the plugins directory of your Eclipse installation\r\n3. (Re)start Eclipse (might need to do it whith the -clean option)\r\n\r\nHow to use\r\n----------\r\n\r\n1. In __Project Explorer__ select one or more projects\r\n2. Right-click -> DIVi -> View Dependency Injection\r\n3. DI Viewer view should appear with a tree, like this:\r\n\r\n```\r\n[project_1]\r\n  (C) fully.qualified.name.of.Class ({nr of injected dependencies})\r\n    @ fully.qualified.name.of.injected.Type : {variable name}\r\n      (C) fully.qualified.name.of.Implementation1\r\n      (C) fully.qualified.name.of.Implementation2\r\n[project_2]\r\n  ... similar to project_1\r\n```\r\n\r\n4. Double-click on \"Class\" or \"injected.Type\" to open up that selected type in the editor.\r\n\r\n2. alternative) You can analyze your project (again or for the first time as well) by pressing the \"i\" button on the\r\n  action bar of the DI Viewer, or from a context menu in the DI Viewer. Project(s) need to be selected beforehand in\r\n  this case.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}